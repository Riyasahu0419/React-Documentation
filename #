# what is React?

React is a open source javasScipt library   for building the user interfaces (UI) library
React is a tool of building UI components and user-friendly websites  its mostly used by developers to create dynamic ad responsive web applications

# Who made React?

React was developed by facebook. the initial vrrsion of react also known as React.js was created by jorda Walke, a software engineer at facebook. React was first deployed on facebook newsfeed in 2011 and later open sourced in 2013.

# What is Babel?

Bable is a javascipt compiler which can translate markup or programming languages ito javaScript.
by usig bable you can use the newest features of javascipt(ES6 - ECMAScript 2015)

# How does Babel convert html code in React into valid code?

React doesn't  directly deal with HTML code ,instead it uses JSX(jacvascript Xml) ,which is syntax entesion for javaScript. JSX just looks similar to HTML but gets transfered into javaScript code by tools like Babel.

```

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>React with Babel</title>
</head>
<body>
    <h1>babel</h1>
    
    <div id="root"></div>

    <script src="https://unpkg.com/react@17/umd/react.development.js"></script>
    <script src="https://unpkg.com/react-dom@17/umd/react-dom.development.js"></script>
    <script src="https://unpkg.com/babel-standalone@6.26.0/babel.min.js"></script>

    <script type="text/babel">
        
        const element1 = <h1>It's a React</h1>;

        ReactDOM.render(element1, document.getElementById('root'));
        
    </script>
</body>
</html>

```

# What is ReactDOM used for? Write an example?

ReactDom is a library that is part of the React ecosystem. it is specifically responsible for rendering React components to the DOM (Document Object Model). In other words, it takes the virtual representation of your React components and makes them visible on the web page.

```
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>React with ReactDOM</title>
</head>
<body>
    <div id="root"></div>

    <script src="https://unpkg.com/react@17/umd/react.development.js"></script>
    <script src="https://unpkg.com/react-dom@17/umd/react-dom.development.js"></script>
    <script>
       
       const  element1 = <h1>it's  ReactDOM time</h1>;

       ReactDOM.render(element1,document.getElementById('root'));
       
    </script>
</body>
</html>


```

# What are the packages that you need to import for react to work with?

there is many packages that we need to import for work with react like React,ReactDOM,Babel,Webpack,React Router(if you need client side),
State Management Library (optional, depending on your needs),Axios or Fetch (for making HTTP requests):

but React and ReactDOM is apackages which is most important.

React
```
`import React from 'react';``

```
ReactDOM

```
`import ReactDOM from 'react-dom';``

```

# How do you add react to a web application?

Here are some of the easiest and fastest ways to create a React web application:
Using 

```
<script> In Your HTML Page To Create A React Web Application. ...
```

First, add an empty <div> element to your HTML page. ...
Now, add the following script tags before the <body> in your HTML file: ...
Now, we'll create a React component.

# What is React.createElement?

React.createElement is a function in React that is used to create React elements. It is a fundamental building block of React applications, and it is often used behind the scenes when you write JSX code.

```
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ReactDOM</title>
</head>
<body>
    <h1>ReactDOM</h1>
    <div id="root"></div>

    <script src="https://unpkg.com/react@17/umd/react.development.js"></script>
    <script src="https://unpkg.com/react-dom@17/umd/react-dom.development.js"></script>
    <script>
      
      let element = React.createElement(
        "div",
        {
          id: "container",
          className: "main",
        },
        [
          React.createElement("h3", null, "Learning React")
        ]
      );

      ReactDOM.render(element, document.getElementById('root'));
    </script>
</body>
</html>


```



# What are the three properties that createElement accept?

createElement() function takes three arguments: type , props , and children . And returns an object just like the one above.

# What is the meaning of render and root?

Render-
    render means converting a React component into a description of how the user interface should look in the Virtual DOM.

    When we write a render method in a React component, we're describing what the component should display in the app, creating a virtual representation of the user interface.

 Root-
       the "root" is like the boss element that holds all the other elements of your app. Imagine it as the big container where your entire React application lives. This container is usually specified in the HTML file that acts as the starting point for your React app. It's the first element where React sets up shop and starts building your user interface.